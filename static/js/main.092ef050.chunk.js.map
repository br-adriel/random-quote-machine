{"version":3,"sources":["components/Footer.js","components/Actions.js","components/Quote.js","components/QuoteBox.js","App.js","index.js"],"names":["Footer","Actions","props","tweetURL","data","tags","content","author","tumblrURL","className","href","id","target","title","classColor","rel","onClick","getQuote","Quote","QuoteBox","App","useState","setClassColor","setData","useEffect","fetch","response","json","colorIndex","Math","floor","random","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qVAOeA,EAJA,WACb,OAAO,uDACT,ECoCeC,G,MAvCC,SAACC,GACf,IAAMC,EAAQ,oDAAgDD,EAAME,KAAKC,KAAI,kBAAUH,EAAME,KAAKE,QAAO,aAAKJ,EAAME,KAAKG,QACnHC,EAAS,wEAAoEN,EAAME,KAAKC,KAAI,oBAAYH,EAAME,KAAKG,OAAM,oBAAYL,EAAME,KAAKE,QAAO,gFAE7J,OACE,sBAAKG,UAAU,UAAS,UACtB,gCACE,mBACEC,KAAMP,EACNQ,GAAG,cACHC,OAAO,SACPC,MAAM,cACNJ,UAAS,gBAAWP,EAAMY,YAC1BC,IAAI,aAAY,SAEhB,mBAAGN,UAAU,qBAEf,mBACEE,GAAG,eACHF,UAAS,gBAAWP,EAAMY,YAC1BJ,KAAMF,EACNK,MAAM,iBACNE,IAAI,aAAY,SAEhB,mBAAGN,UAAU,uBAGjB,wBACEE,GAAG,YACHF,UAAS,gBAAWP,EAAMY,YAC1BD,MAAM,YACNG,QAASd,EAAMe,SAAS,yBAMhC,GC3BeC,G,MATD,SAAChB,GACb,OACE,qCACE,mBAAGS,GAAG,OAAM,SAAET,EAAME,KAAKE,UACzB,oBAAGK,GAAG,SAAQ,eAAIT,EAAME,KAAKG,YAGnC,GCYeY,G,MAhBE,SAACjB,GAChB,OACE,qCACE,0BAASS,GAAG,YAAW,UACrB,cAAC,EAAK,CAACP,KAAMF,EAAME,OACnB,cAAC,EAAO,CACNU,WAAYZ,EAAMY,WAClBG,SAAUf,EAAMe,SAChBb,KAAMF,EAAME,UAGhB,cAAC,EAAM,MAGb,GCgBegB,EAhCH,WACV,MAAoCC,mBAAS,GAAE,mBAAxCP,EAAU,KAAEQ,EAAa,KAChC,EAAwBD,mBAAS,CAAC,GAAE,mBAA7BjB,EAAI,KAAEmB,EAAO,KAEpBC,qBAAU,kBAAMP,GAAU,GAAE,IAE5B,IAAMA,EAAQ,iDAAG,2HAEUQ,MAAM,kCAAkC,KAAD,EAAhD,OAARC,EAAQ,gBACKA,EAASC,OAAO,KAAD,EAGlC,IAHMvB,EAAI,OAENwB,EAAad,EACVc,IAAed,GACpBc,EAAaC,KAAKC,MAAsB,EAAhBD,KAAKE,UAE/BT,EAAcM,GACdL,EAAQnB,GACR4B,QAAQC,IAAI7B,GAAM,kDAElB4B,QAAQC,IAAI,EAAD,IAAI,0DAElB,kBAfa,mCAiBd,OACE,sBAAMxB,UAAS,YAAOK,GAAa,SACjC,qBAAKL,UAAU,YAAW,SACxB,cAAC,EAAQ,CAACK,WAAYA,EAAYV,KAAMA,EAAMa,SAAUA,OAIhE,EC7BAiB,IAASC,OACP,cAAC,IAAMC,WAAU,UACf,cAAC,EAAG,MAENC,SAASC,eAAe,Q","file":"static/js/main.092ef050.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Footer.css\";\n\nconst Footer = () => {\n  return <footer>Adriel Faria, 2021</footer>;\n};\n\nexport default Footer;\n","import \"./Actions.css\";\n\nconst Actions = (props) => {\n  const tweetURL = `https://twitter.com/intent/tweet?hashtags=${props.data.tags}&text=\"${props.data.content}\" ${props.data.author}`;\n  const tumblrURL = `https://www.tumblr.com/widgets/share/tool?posttype=quote&tags=${props.data.tags}&caption=${props.data.author}&content=${props.data.content}&canonicalUrl=https://www.tumblr.com/buttons&shareSource=tumblr_share_button`;\n\n  return (\n    <div className=\"actions\">\n      <div>\n        <a\n          href={tweetURL}\n          id=\"tweet-quote\"\n          target=\"_blank\"\n          title=\"Tweet quote\"\n          className={`btn bg${props.classColor}`}\n          rel=\"noreferrer\"\n        >\n          <i className=\"fab fa-twitter\"></i>\n        </a>\n        <a\n          id=\"tumblr-quote\"\n          className={`btn bg${props.classColor}`}\n          href={tumblrURL}\n          title=\"Post on Tumblr\"\n          rel=\"noreferrer\"\n        >\n          <i className=\"fab fa-tumblr\"></i>\n        </a>\n      </div>\n      <button\n        id=\"new-quote\"\n        className={`btn bg${props.classColor}`}\n        title=\"New quote\"\n        onClick={props.getQuote}\n      >\n        New quote\n      </button>\n    </div>\n  );\n};\n\nexport default Actions;\n","import React from \"react\";\nimport \"./Quote.css\";\n\nconst Quote = (props) => {\n  return (\n    <>\n      <p id=\"text\">{props.data.content}</p>\n      <p id=\"author\">- {props.data.author}</p>\n    </>\n  );\n};\n\nexport default Quote;\n","import React from \"react\";\nimport Footer from \"./Footer\";\nimport Actions from \"./Actions\";\nimport Quote from \"./Quote\";\nimport \"./QuoteBox.css\";\n\nconst QuoteBox = (props) => {\n  return (\n    <>\n      <section id=\"quote-box\">\n        <Quote data={props.data} />\n        <Actions\n          classColor={props.classColor}\n          getQuote={props.getQuote}\n          data={props.data}\n        />\n      </section>\n      <Footer />\n    </>\n  );\n};\n\nexport default QuoteBox;\n","import \"./App.css\";\nimport QuoteBox from \"./components/QuoteBox\";\nimport { useState, useEffect } from \"react\";\n\nconst App = () => {\n  const [classColor, setClassColor] = useState(0);\n  const [data, setData] = useState({});\n\n  useEffect(() => getQuote(), []);\n\n  const getQuote = async () => {\n    try {\n      const response = await fetch(`https://api.quotable.io/random`);\n      const data = await response.json();\n\n      let colorIndex = classColor;\n      while (colorIndex === classColor) {\n        colorIndex = Math.floor(Math.random() * 8);\n      }\n      setClassColor(colorIndex);\n      setData(data);\n      console.log(data);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return (\n    <main className={`bg${classColor}`}>\n      <div className=\"container\">\n        <QuoteBox classColor={classColor} data={data} getQuote={getQuote} />\n      </div>\n    </main>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}