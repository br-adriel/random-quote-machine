{"version":3,"sources":["components/Footer.js","components/Actions.js","components/Quote.js","components/QuoteBox.js","App.js","index.js"],"names":["Footer","Actions","props","tweetURL","data","tags","content","author","tumblrURL","className","href","id","target","title","classColor","rel","onClick","getQuote","Quote","QuoteBox","App","useState","setClassColor","setData","useEffect","a","fetch","response","json","colorIndex","Math","floor","random","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+VAOeA,EAJA,WACb,OAAO,yDCqCMC,G,MAvCC,SAACC,GACf,IAAMC,EAAQ,oDAAgDD,EAAME,KAAKC,KAA3D,kBAAyEH,EAAME,KAAKE,QAApF,aAAgGJ,EAAME,KAAKG,QACnHC,EAAS,wEAAoEN,EAAME,KAAKC,KAA/E,oBAA+FH,EAAME,KAAKG,OAA1G,oBAA4HL,EAAME,KAAKE,QAAvI,gFAEf,OACE,sBAAKG,UAAU,UAAf,UACE,gCACE,mBACEC,KAAMP,EACNQ,GAAG,cACHC,OAAO,SACPC,MAAM,cACNJ,UAAS,gBAAWP,EAAMY,YAC1BC,IAAI,aANN,SAQE,mBAAGN,UAAU,qBAEf,mBACEE,GAAG,eACHF,UAAS,gBAAWP,EAAMY,YAC1BJ,KAAMF,EACNK,MAAM,iBACNE,IAAI,aALN,SAOE,mBAAGN,UAAU,uBAGjB,wBACEE,GAAG,YACHF,UAAS,gBAAWP,EAAMY,YAC1BD,MAAM,YACNG,QAASd,EAAMe,SAJjB,4BCjBSC,G,MATD,SAAChB,GACb,OACE,qCACE,mBAAGS,GAAG,OAAN,SAAcT,EAAME,KAAKE,UACzB,oBAAGK,GAAG,SAAN,eAAkBT,EAAME,KAAKG,eCepBY,G,MAhBE,SAACjB,GAChB,OACE,qCACE,0BAASS,GAAG,YAAZ,UACE,cAAC,EAAD,CAAOP,KAAMF,EAAME,OACnB,cAAC,EAAD,CACEU,WAAYZ,EAAMY,WAClBG,SAAUf,EAAMe,SAChBb,KAAMF,EAAME,UAGhB,cAAC,EAAD,SCmBSgB,EAhCH,WACV,MAAoCC,mBAAS,GAA7C,mBAAOP,EAAP,KAAmBQ,EAAnB,KACA,EAAwBD,mBAAS,IAAjC,mBAAOjB,EAAP,KAAamB,EAAb,KAEAC,qBAAU,kBAAMP,MAAY,IAE5B,IAAMA,EAAQ,uCAAG,gCAAAQ,EAAA,+EAEUC,MAAM,kCAFhB,cAEPC,EAFO,gBAGMA,EAASC,OAHf,OAMb,IAHMxB,EAHO,OAKTyB,EAAaf,EACVe,IAAef,GACpBe,EAAaC,KAAKC,MAAsB,EAAhBD,KAAKE,UAE/BV,EAAcO,GACdN,EAAQnB,GACR6B,QAAQC,IAAI9B,GAXC,kDAab6B,QAAQC,IAAR,MAba,0DAAH,qDAiBd,OACE,sBAAMzB,UAAS,YAAOK,GAAtB,SACE,qBAAKL,UAAU,YAAf,SACE,cAAC,EAAD,CAAUK,WAAYA,EAAYV,KAAMA,EAAMa,SAAUA,SCzBhEkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.cd9ab472.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Footer.css\";\r\n\r\nconst Footer = () => {\r\n  return <footer>Adriel Faria, 2021</footer>;\r\n};\r\n\r\nexport default Footer;\r\n","import \"./Actions.css\";\r\n\r\nconst Actions = (props) => {\r\n  const tweetURL = `https://twitter.com/intent/tweet?hashtags=${props.data.tags}&text=\"${props.data.content}\" ${props.data.author}`;\r\n  const tumblrURL = `https://www.tumblr.com/widgets/share/tool?posttype=quote&tags=${props.data.tags}&caption=${props.data.author}&content=${props.data.content}&canonicalUrl=https://www.tumblr.com/buttons&shareSource=tumblr_share_button`;\r\n\r\n  return (\r\n    <div className=\"actions\">\r\n      <div>\r\n        <a\r\n          href={tweetURL}\r\n          id=\"tweet-quote\"\r\n          target=\"_blank\"\r\n          title=\"Tweet quote\"\r\n          className={`btn bg${props.classColor}`}\r\n          rel=\"noreferrer\"\r\n        >\r\n          <i className=\"fab fa-twitter\"></i>\r\n        </a>\r\n        <a\r\n          id=\"tumblr-quote\"\r\n          className={`btn bg${props.classColor}`}\r\n          href={tumblrURL}\r\n          title=\"Post on Tumblr\"\r\n          rel=\"noreferrer\"\r\n        >\r\n          <i className=\"fab fa-tumblr\"></i>\r\n        </a>\r\n      </div>\r\n      <button\r\n        id=\"new-quote\"\r\n        className={`btn bg${props.classColor}`}\r\n        title=\"New quote\"\r\n        onClick={props.getQuote}\r\n      >\r\n        New quote\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Actions;\r\n","import React from \"react\";\r\nimport \"./Quote.css\";\r\n\r\nconst Quote = (props) => {\r\n  return (\r\n    <>\r\n      <p id=\"text\">{props.data.content}</p>\r\n      <p id=\"author\">- {props.data.author}</p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Quote;\r\n","import React from \"react\";\r\nimport Footer from \"./Footer\";\r\nimport Actions from \"./Actions\";\r\nimport Quote from \"./Quote\";\r\nimport \"./QuoteBox.css\";\r\n\r\nconst QuoteBox = (props) => {\r\n  return (\r\n    <>\r\n      <section id=\"quote-box\">\r\n        <Quote data={props.data} />\r\n        <Actions\r\n          classColor={props.classColor}\r\n          getQuote={props.getQuote}\r\n          data={props.data}\r\n        />\r\n      </section>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QuoteBox;\r\n","import \"./App.css\";\r\nimport QuoteBox from \"./components/QuoteBox\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst App = () => {\r\n  const [classColor, setClassColor] = useState(0);\r\n  const [data, setData] = useState({});\r\n\r\n  useEffect(() => getQuote(), []);\r\n\r\n  const getQuote = async () => {\r\n    try {\r\n      const response = await fetch(`https://api.quotable.io/random`);\r\n      const data = await response.json();\r\n\r\n      let colorIndex = classColor;\r\n      while (colorIndex === classColor) {\r\n        colorIndex = Math.floor(Math.random() * 8);\r\n      }\r\n      setClassColor(colorIndex);\r\n      setData(data);\r\n      console.log(data);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <main className={`bg${classColor}`}>\r\n      <div className=\"container\">\r\n        <QuoteBox classColor={classColor} data={data} getQuote={getQuote} />\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}